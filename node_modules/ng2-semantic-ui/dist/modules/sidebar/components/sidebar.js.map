{"version":3,"file":"sidebar.js","sourceRoot":"","sources":["../../../../src/modules/sidebar/components/sidebar.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, HostBinding, Input, Output, Renderer2, ElementRef, EventEmitter } from \"@angular/core\";\r\nimport { SidebarService, SidebarTransition, SidebarDirection } from \"../services/sidebar.service\";\r\n\r\n@Component({\r\n    selector: \"sui-sidebar\",\r\n    template: `<ng-content></ng-content>`\r\n})\r\nexport class SuiSidebar {\r\n    public service:SidebarService;\r\n\r\n    @HostBinding(\"class.ui\")\r\n    @HostBinding(\"class.sidebar\")\r\n    @HostBinding(\"class.menu\")\r\n    private _sidebarClasses:boolean;\r\n\r\n    @Input()\r\n    public get transition():SidebarTransition {\r\n        return this.service.transition;\r\n    }\r\n\r\n    public set transition(transition:SidebarTransition) {\r\n        this.service.transition.split(\" \").forEach(c => this.setClass(c, false));\r\n\r\n        this.service.transition = transition;\r\n\r\n        this.service.transition.split(\" \").forEach(c => this.setClass(c, true));\r\n    }\r\n\r\n    @Input()\r\n    public get direction():SidebarDirection {\r\n        return this.service.direction;\r\n    }\r\n\r\n    public set direction(direction:SidebarDirection) {\r\n        this.setClass(this.service.direction, false);\r\n\r\n        this.service.direction = direction;\r\n\r\n        this.setClass(this.service.direction, true);\r\n    }\r\n\r\n    @HostBinding(\"class.visible\")\r\n    @Input()\r\n    public get isVisible():boolean {\r\n        return this.service.isVisible;\r\n    }\r\n\r\n    public set isVisible(isVisible:boolean) {\r\n        this.service.setVisibleState(isVisible);\r\n    }\r\n\r\n    @Output()\r\n    public get isVisibleChange():EventEmitter<boolean> {\r\n        return this.service.isVisibleChange;\r\n    }\r\n\r\n    @HostBinding(\"class.animating\")\r\n    public get isAnimating():boolean {\r\n        return this.service.isAnimating;\r\n    }\r\n\r\n    constructor(private _renderer:Renderer2, private _element:ElementRef) {\r\n        this.service = new SidebarService();\r\n        // We set the default here as well to force the classes to update.\r\n        this.transition = SidebarTransition.Uncover;\r\n        this.direction = SidebarDirection.Left;\r\n\r\n        setTimeout(() => this.updateDimensions());\r\n        this.service.isVisibleChange.subscribe(() => this.updateDimensions());\r\n\r\n        this._sidebarClasses = true;\r\n    }\r\n\r\n    private updateDimensions():void {\r\n        this.service.width = this._element.nativeElement.offsetWidth;\r\n        this.service.height = this._element.nativeElement.offsetHeight;\r\n    }\r\n\r\n    private setClass(className:string, isAdd:boolean = true):void {\r\n        if (isAdd) {\r\n            this._renderer.addClass(this._element.nativeElement, className);\r\n        } else {\r\n            this._renderer.removeClass(this._element.nativeElement, className);\r\n        }\r\n    }\r\n\r\n    public open():void {\r\n        this.service.setVisibleState(true);\r\n    }\r\n\r\n    public close():void {\r\n        this.service.setVisibleState(false);\r\n    }\r\n\r\n    public toggle():void {\r\n        this.service.toggleVisibleState();\r\n    }\r\n}\r\n"]}