{"version":3,"file":"calendar-item.js","sourceRoot":"","sources":["../../../../src/modules/datepicker/directives/calendar-item.ts"],"names":[],"mappings":";;;;;;;;;AACA,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,YAAY,EAAE,KAAK,EAAE,YAAY,EAAE,iBAAiB,EAAE,MAAM,eAAe,CAAC;AAE7G;IASI,sBAAY,IAAS;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IACL,mBAAC;AAAD,CAAC,AAZD,IAYC;;AAKD,IAAa,eAAe;IAwBxB,yBAAmB,cAAgC;QAAhC,mBAAc,GAAd,cAAc,CAAkB;QAC/C,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QAEtB,IAAI,CAAC,UAAU,GAAG,IAAI,YAAY,EAAW,CAAC;IAClD,CAAC;IAvBD,sBAAW,yCAAY;aAAvB;YACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;QAClC,CAAC;;;OAAA;IAGD,sBAAW,qCAAQ;aAAnB;YACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC9B,CAAC;;;OAAA;IAGD,sBAAW,oCAAO;aAAlB;YACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;QAC7B,CAAC;;;OAAA;IAcM,qCAAW,GAAlB;QACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACxC,CAAC;IACL,CAAC;IAGM,sCAAY,GAAnB;QACI,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACxC,CAAC;IACL,sBAAC;AAAD,CAAC,AA3CD,IA2CC;AAzCG;IADC,KAAK,CAAC,cAAc,CAAC;8BACV,YAAY;6CAAC;AAGzB;IADC,WAAW,CAAC,gBAAgB,CAAC;;;mDAG7B;AAGD;IADC,WAAW,CAAC,cAAc,CAAC;;;+CAG3B;AAGD;IADC,WAAW,CAAC,aAAa,CAAC;;;8CAG1B;AAGD;IADC,WAAW,CAAC,aAAa,CAAC;;iDACH;AAWxB;IADC,YAAY,CAAC,WAAW,CAAC;;;;kDAMzB;AAGD;IADC,YAAY,CAAC,YAAY,CAAC;;;;mDAI1B;AA1CQ,eAAe;IAH3B,SAAS,CAAC;QACP,QAAQ,EAAE,gBAAgB;KAC7B,CAAC;qCAyBoC,iBAAiB;GAxB1C,eAAe,CA2C3B;SA3CY,eAAe","sourcesContent":["\r\nimport { Directive, HostBinding, HostListener, Input, EventEmitter, ChangeDetectorRef } from \"@angular/core\";\r\n\r\nexport class CalendarItem {\r\n    public date:Date;\r\n    public humanReadable:string;\r\n    public isDisabled:boolean;\r\n    public isActive:boolean;\r\n    public isOutsideRange:boolean;\r\n    public isToday:boolean;\r\n    public isSelectable:boolean;\r\n\r\n    constructor(date:Date) {\r\n        this.date = date;\r\n    }\r\n}\r\n\r\n@Directive({\r\n    selector: \"[calendarItem]\"\r\n})\r\nexport class SuiCalendarItem {\r\n    @Input(\"calendarItem\")\r\n    public item:CalendarItem;\r\n\r\n    @HostBinding(\"class.disabled\")\r\n    public get isSelectable():boolean {\r\n        return this.item.isSelectable;\r\n    }\r\n\r\n    @HostBinding(\"class.active\")\r\n    public get isActive():boolean {\r\n        return this.item.isActive;\r\n    }\r\n\r\n    @HostBinding(\"class.today\")\r\n    public get isToday():boolean {\r\n        return this.item.isToday;\r\n    }\r\n\r\n    @HostBinding(\"class.focus\")\r\n    public hasFocus:boolean;\r\n\r\n    public onFocussed:EventEmitter<boolean>;\r\n\r\n    constructor(public changeDetector:ChangeDetectorRef) {\r\n        this.hasFocus = false;\r\n\r\n        this.onFocussed = new EventEmitter<boolean>();\r\n    }\r\n\r\n    @HostListener(\"mousemove\")\r\n    public onMouseMove():void {\r\n        if (!this.hasFocus) {\r\n            this.hasFocus = true;\r\n            this.onFocussed.emit(this.hasFocus);\r\n        }\r\n    }\r\n\r\n    @HostListener(\"mouseleave\")\r\n    public onMouseLeave():void {\r\n        this.hasFocus = false;\r\n        this.onFocussed.emit(this.hasFocus);\r\n    }\r\n}\r\n"]}