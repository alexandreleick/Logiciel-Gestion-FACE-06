{"version":3,"file":"search.js","sourceRoot":"","sources":["../../../../src/modules/search/components/search.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n    Component, ViewChild, HostBinding, Input, AfterViewInit, HostListener,\r\n    EventEmitter, Output, Directive, ElementRef, TemplateRef, Renderer2, OnDestroy\r\n} from \"@angular/core\";\r\nimport { Util, ITemplateRefContext, IFocusEvent } from \"../../../misc/util/index\";\r\nimport { DropdownService, SuiDropdownMenu } from \"../../dropdown/index\";\r\nimport { ISearchLocaleValues, RecursivePartial, SuiLocalizationService } from \"../../../behaviors/localization/index\";\r\nimport { SearchService } from \"../services/search.service\";\r\nimport { LookupFn, FilterFn } from \"../helpers/lookup-fn\";\r\n\r\nexport interface IResultContext<T> extends ITemplateRefContext<T> {\r\n    query:string;\r\n}\r\n\r\n@Component({\r\n    selector: \"sui-search\",\r\n    template: `\r\n<div class=\"ui input\" [class.icon]=\"hasIcon\" (click)=\"onClick($event)\">\r\n    <input class=\"prompt\" type=\"text\" [attr.placeholder]=\"placeholder\" autocomplete=\"off\" [(ngModel)]=\"query\">\r\n    <i *ngIf=\"hasIcon\" class=\"search icon\"></i>\r\n</div>\r\n<div class=\"results\"\r\n     suiDropdownMenu\r\n     [menuTransition]=\"transition\"\r\n     [menuTransitionDuration]=\"transitionDuration\"\r\n     menuSelectedItemClass=\"active\">\r\n\r\n    <sui-search-result *ngFor=\"let r of results\"\r\n                       class=\"item\"\r\n                       [value]=\"r\"\r\n                       [query]=\"query\"\r\n                       [formatter]=\"resultFormatter\"\r\n                       [template]=\"resultTemplate\"\r\n                       (click)=\"select(r)\"></sui-search-result>\r\n\r\n    <div *ngIf=\"results.length == 0\" class=\"message empty\">\r\n        <div class=\"header\">{{ localeValues.noResults.header }}</div>\r\n        <div class=\"description\">{{ localeValues.noResults.message }}</div>\r\n    </div>\r\n</div>\r\n`,\r\n    styles: [`\r\n/* Ensures results div has margin. */\r\n:host {\r\n    display: inline-block;\r\n}\r\n\r\n/* Fixes positioning when results are pushed above the search. */\r\n.results {\r\n    margin-bottom: .5em;\r\n}\r\n`]\r\n})\r\nexport class SuiSearch<T> implements AfterViewInit, OnDestroy {\r\n    public dropdownService:DropdownService;\r\n    public searchService:SearchService<T, T>;\r\n\r\n    @ViewChild(SuiDropdownMenu)\r\n    private _menu:SuiDropdownMenu;\r\n\r\n    // Sets the Semantic UI classes on the host element.\r\n    // Doing it on the host enables use in menus etc.\r\n    @HostBinding(\"class.ui\")\r\n    @HostBinding(\"class.search\")\r\n    private _searchClasses:boolean;\r\n\r\n    @HostBinding(\"class.active\")\r\n    public get isActive():boolean {\r\n        return this.dropdownService.isOpen;\r\n    }\r\n\r\n    // Sets whether the search element has a visible search icon.\r\n    @Input()\r\n    public hasIcon:boolean;\r\n\r\n    private _placeholder:string;\r\n\r\n    // Gets & sets the placeholder text displayed inside the text input.\r\n    @Input()\r\n    public get placeholder():string {\r\n        return this._placeholder || this.localeValues.placeholder;\r\n    }\r\n\r\n    public set placeholder(placeholder:string) {\r\n        this._placeholder = placeholder;\r\n    }\r\n\r\n    private _localeValues:ISearchLocaleValues;\r\n\r\n    public localeOverrides:RecursivePartial<ISearchLocaleValues>;\r\n\r\n    public get localeValues():ISearchLocaleValues {\r\n        return this._localizationService.override<\"search\">(this._localeValues, this.localeOverrides);\r\n    }\r\n\r\n    public get query():string {\r\n        return this.searchService.query;\r\n    }\r\n\r\n    public set query(query:string) {\r\n        this.selectedResult = undefined;\r\n        // Initialise a delayed search.\r\n        this.searchService.updateQueryDelayed(query, () =>\r\n            // Set the results open state depending on whether a query has been entered.\r\n            this.dropdownService.setOpenState(this.searchService.query.length > 0));\r\n    }\r\n\r\n    @Input()\r\n    public set options(options:T[] | undefined) {\r\n        if (options) {\r\n            this.searchService.options = options;\r\n        }\r\n    }\r\n\r\n    @Input()\r\n    public set optionsFilter(filter:FilterFn<T> | undefined) {\r\n        if (filter) {\r\n            this.searchService.optionsFilter = filter;\r\n        }\r\n    }\r\n\r\n    @Input()\r\n    public set optionsLookup(lookupFn:LookupFn<T> | undefined) {\r\n        this.searchService.optionsLookup = lookupFn;\r\n    }\r\n\r\n    @Input()\r\n    public set optionsField(field:string | undefined) {\r\n        this.searchService.optionsField = field;\r\n    }\r\n\r\n    private _resultFormatter?:(r:T, q:string) => string;\r\n\r\n    public get resultFormatter():(result:T, query:string) => string {\r\n        if (this._resultFormatter) {\r\n            return this._resultFormatter;\r\n        } else if (this.searchService.optionsLookup) {\r\n            return r => this.readValue(r);\r\n        } else {\r\n            return (r, q) => this.searchService.highlightMatches(this.readValue(r), q);\r\n        }\r\n    }\r\n\r\n    @Input()\r\n    public set resultFormatter(formatter:(result:T, query:string) => string) {\r\n        this._resultFormatter = formatter;\r\n    }\r\n\r\n    @Input()\r\n    public resultTemplate:TemplateRef<IResultContext<T>>;\r\n\r\n    @Input()\r\n    public retainSelectedResult:boolean;\r\n\r\n    @Input()\r\n    public set searchDelay(delay:number) {\r\n        this.searchService.searchDelay = delay;\r\n    }\r\n\r\n    @HostBinding(\"class.loading\")\r\n    public get isSearching():boolean {\r\n        return this.searchService.isSearching;\r\n    }\r\n\r\n    @Input()\r\n    public maxResults:number;\r\n\r\n    public get results():T[] {\r\n        return this.searchService.results.slice(0, this.maxResults);\r\n    }\r\n\r\n    // Stores the currently selected result.\r\n    public selectedResult?:T;\r\n\r\n    // Emits whenever a new result is selected.\r\n    @Output(\"resultSelected\")\r\n    public onResultSelected:EventEmitter<T>;\r\n\r\n    @Input()\r\n    public transition:string;\r\n\r\n    @Input()\r\n    public transitionDuration:number;\r\n\r\n    private _documentClickListener:() => void;\r\n\r\n    constructor(private _element:ElementRef, renderer:Renderer2, private _localizationService:SuiLocalizationService) {\r\n        this.dropdownService = new DropdownService();\r\n        this.searchService = new SearchService<T, T>();\r\n\r\n        this.onLocaleUpdate();\r\n        this._localizationService.onLanguageUpdate.subscribe(() => this.onLocaleUpdate());\r\n\r\n        this._searchClasses = true;\r\n        this.hasIcon = true;\r\n        this.retainSelectedResult = true;\r\n        this.searchDelay = 200;\r\n        this.maxResults = 7;\r\n\r\n        this.onResultSelected = new EventEmitter<T>();\r\n\r\n        this.transition = \"scale\";\r\n        this.transitionDuration = 200;\r\n\r\n        this._documentClickListener = renderer.listen(\"document\", \"click\", (e:MouseEvent) => this.onDocumentClick(e));\r\n    }\r\n\r\n    public ngAfterViewInit():void {\r\n        this._menu.service = this.dropdownService;\r\n    }\r\n\r\n    private onLocaleUpdate():void {\r\n        this._localeValues = this._localizationService.get().search;\r\n    }\r\n\r\n    // Selects a result.\r\n    public select(result:T):void {\r\n        this.onResultSelected.emit(result);\r\n        this.dropdownService.setOpenState(false);\r\n\r\n        if (this.retainSelectedResult) {\r\n            this.selectedResult = result;\r\n            this.searchService.updateQuery(this.readValue(result));\r\n        } else {\r\n            this.searchService.updateQuery(\"\");\r\n        }\r\n    }\r\n\r\n    public onClick(e:MouseEvent):void {\r\n        this.open();\r\n    }\r\n\r\n    @HostListener(\"focusin\")\r\n    private onFocusIn():void {\r\n        if (!this.dropdownService.isAnimating) {\r\n            this.open();\r\n        }\r\n    }\r\n\r\n    private open():void {\r\n        if (this.searchService.query.length > 0) {\r\n            // Only open on click when there is a query entered.\r\n            this.dropdownService.setOpenState(true);\r\n        }\r\n    }\r\n\r\n    @HostListener(\"focusout\", [\"$event\"])\r\n    private onFocusOut(e:IFocusEvent):void {\r\n        if (!this._element.nativeElement.contains(e.relatedTarget)) {\r\n            this.dropdownService.setOpenState(false);\r\n        }\r\n    }\r\n\r\n    public onDocumentClick(e:MouseEvent):void {\r\n        if (!this._element.nativeElement.contains(e.target)) {\r\n            this.dropdownService.setOpenState(false);\r\n        }\r\n    }\r\n\r\n    // Reads the specified field from an item.\r\n    public readValue(object:T):string {\r\n        return Util.Object.readValue<T, string>(object, this.searchService.optionsField);\r\n    }\r\n\r\n    public ngOnDestroy():void {\r\n        this._documentClickListener();\r\n    }\r\n}\r\n"]}