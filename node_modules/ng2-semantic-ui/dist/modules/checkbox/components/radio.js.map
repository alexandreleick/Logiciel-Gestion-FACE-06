{"version":3,"file":"radio.js","sourceRoot":"","sources":["../../../../src/modules/checkbox/components/radio.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n    Component, Directive, Input, Output, HostListener, HostBinding,\r\n    EventEmitter, ViewChild, ElementRef, ContentChildren, AfterContentInit, QueryList\r\n} from \"@angular/core\";\r\nimport {\r\n    ICustomValueAccessorHost, customValueAccessorFactory, CustomValueAccessor,\r\n    Util\r\n} from \"../../../misc/util/index\";\r\nimport { Subscription } from \"rxjs/Subscription\";\r\n\r\n@Component({\r\n    selector: \"sui-radio-button\",\r\n    template: `\r\n<input class=\"hidden\"\r\n       type=\"checkbox\"\r\n       [attr.name]=\"name\"\r\n       [attr.checked]=\"checkedAttribute\"\r\n       [attr.disabled]=\"isDisabledAttribute\"\r\n       [ngModel]=\"isChecked\"\r\n       (ngModel)=\"currentValue = value\"\r\n       #radio>\r\n<label>\r\n    <ng-content></ng-content>\r\n</label>\r\n`\r\n})\r\nexport class SuiRadio<T> implements ICustomValueAccessorHost<T> {\r\n    @HostBinding(\"class.ui\")\r\n    @HostBinding(\"class.radio\")\r\n    @HostBinding(\"class.checkbox\")\r\n    private _radioClasses:boolean = true;\r\n\r\n    @Input()\r\n    public name:string;\r\n\r\n    @Input()\r\n    public value:T;\r\n\r\n    @HostBinding(\"class.checked\")\r\n    public isChecked:boolean;\r\n\r\n    public currentValue:T;\r\n\r\n    @Output(\"currentValueChange\")\r\n    public onCurrentValueChange:EventEmitter<T>;\r\n\r\n    @Output(\"touched\")\r\n    public onTouched:EventEmitter<void>;\r\n\r\n    @Input()\r\n    public isDisabled:boolean;\r\n\r\n    @HostBinding(\"class.read-only\")\r\n    @Input()\r\n    public isReadonly:boolean;\r\n\r\n    @ViewChild(\"radio\")\r\n    private _radioElement:ElementRef;\r\n\r\n    public get checkedAttribute():string | undefined {\r\n        return this.isChecked ? \"\" : undefined;\r\n    }\r\n\r\n    public get isDisabledAttribute():string | undefined {\r\n        return this.isDisabled ? \"disabled\" : undefined;\r\n    }\r\n\r\n    constructor() {\r\n        this.isChecked = false;\r\n        this.onCurrentValueChange = new EventEmitter<T>();\r\n        this.onTouched = new EventEmitter<void>();\r\n\r\n        this.isDisabled = false;\r\n        this.isReadonly = false;\r\n\r\n        this._radioClasses = true;\r\n    }\r\n\r\n    @HostListener(\"mousedown\", [\"$event\"])\r\n    public onMouseDown(e:MouseEvent):void {\r\n        e.preventDefault();\r\n    }\r\n\r\n    @HostListener(\"click\")\r\n    public onClick():void {\r\n        if (!this.isDisabled && !this.isReadonly) {\r\n            this.currentValue = this.value;\r\n            this.onCurrentValueChange.emit(this.currentValue);\r\n            this.update();\r\n            this.focusRadio();\r\n        }\r\n    }\r\n\r\n    @HostListener(\"focusout\")\r\n    public onFocusOut():void {\r\n        this.onTouched.emit();\r\n    }\r\n\r\n    public update():void {\r\n        this.isChecked = this.currentValue === this.value;\r\n    }\r\n\r\n    public writeValue(value:T):void {\r\n        this.currentValue = value;\r\n        this.update();\r\n    }\r\n\r\n    private focusRadio():void {\r\n        this._radioElement.nativeElement.focus();\r\n    }\r\n}\r\n\r\n@Directive({\r\n    selector: \"sui-radio-button\",\r\n    host: {\r\n        \"(currentValueChange)\": \"onChange($event)\",\r\n        \"(touched)\": \"onTouched()\"\r\n    },\r\n    providers: [customValueAccessorFactory(SuiRadioValueAccessor)]\r\n})\r\nexport class SuiRadioValueAccessor<T> extends CustomValueAccessor<T, SuiRadio<T>> {\r\n    constructor(host:SuiRadio<T>) {\r\n        super(host);\r\n    }\r\n}\r\n"]}