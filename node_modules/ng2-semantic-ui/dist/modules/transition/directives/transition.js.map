{"version":3,"file":"transition.js","sourceRoot":"","sources":["../../../../src/modules/transition/directives/transition.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,EAAE,KAAK,EAAE,WAAW,EAAE,iBAAiB,EAAE,MAAM,eAAe,CAAC;AACxG,OAAO,EAAE,oBAAoB,EAAE,MAAM,kCAAkC,CAAC;AAMxE,IAAa,aAAa;IA6BtB,uBAAoB,SAAmB,EAAU,QAAmB,EAAU,eAAiC;QAA3F,cAAS,GAAT,SAAS,CAAU;QAAU,aAAQ,GAAR,QAAQ,CAAW;QAAU,oBAAe,GAAf,eAAe,CAAkB;QAlBxG,oBAAe,GAAW,IAAI,CAAC;IAkB4E,CAAC;IAxBnH,sBAAW,wCAAa;aAAxB,UAAyB,EAAuB;YAC5C,6FAA6F;YAC7F,IAAI,CAAC,uBAAuB,CAAC,EAAE,CAAC,CAAC;QACrC,CAAC;;;OAAA;IAMD,sBAAW,oCAAS;aAApB;YACI,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBACnB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC;YACtC,CAAC;YACD,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;;;OAAA;IAGD,sBAAW,mCAAQ;aAAnB;YACI,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBACnB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;YACrC,CAAC;YACD,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;;;OAAA;IAID,wEAAwE;IACjE,+CAAuB,GAA9B,UAA+B,oBAAyC;QACpE,IAAI,CAAC,WAAW,GAAG,oBAAoB,CAAC;QACxC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAClD,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QAC9D,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IAClE,CAAC;IACL,oBAAC;AAAD,CAAC,AAtCD,IAsCC;AAjCG;IADC,KAAK,EAAE;8BACoB,oBAAoB;qCAApB,oBAAoB;kDAG/C;AAGD;IADC,WAAW,CAAC,kBAAkB,CAAC;;sDACM;AAGtC;IADC,WAAW,CAAC,eAAe,CAAC;;;8CAM5B;AAGD;IADC,WAAW,CAAC,cAAc,CAAC;;;6CAM3B;AA3BQ,aAAa;IAJzB,SAAS,CAAC;QACP,QAAQ,EAAE,iBAAiB;QAC3B,QAAQ,EAAE,YAAY;KACzB,CAAC;qCA8BgC,SAAS,EAAmB,UAAU,EAA0B,iBAAiB;GA7BtG,aAAa,CAsCzB;SAtCY,aAAa","sourcesContent":["import { Renderer2, ElementRef, Directive, Input, HostBinding, ChangeDetectorRef } from \"@angular/core\";\r\nimport { TransitionController } from \"../classes/transition-controller\";\r\n\r\n@Directive({\r\n    selector: \"[suiTransition]\",\r\n    exportAs: \"transition\"\r\n})\r\nexport class SuiTransition {\r\n    // Each transition must have a controller associated that dispatches the transitions.\r\n    private _controller:TransitionController;\r\n\r\n    @Input()\r\n    public set suiTransition(tC:TransitionController) {\r\n        // Set the transition controller (e.g. '<div [suiTransition]=\"transitionController\"></div>').\r\n        this.setTransitionController(tC);\r\n    }\r\n\r\n    @HostBinding(\"class.transition\")\r\n    public transitionClass:boolean = true;\r\n\r\n    @HostBinding(\"class.visible\")\r\n    public get isVisible():boolean {\r\n        if (this._controller) {\r\n            return this._controller.isVisible;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @HostBinding(\"class.hidden\")\r\n    public get isHidden():boolean {\r\n        if (this._controller) {\r\n            return this._controller.isHidden;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    constructor(private _renderer:Renderer2, private _element:ElementRef, private _changeDetector:ChangeDetectorRef) {}\r\n\r\n    // Initialises the controller with the injected renderer and elementRef.\r\n    public setTransitionController(transitionController:TransitionController):void {\r\n        this._controller = transitionController;\r\n        this._controller.registerRenderer(this._renderer);\r\n        this._controller.registerElement(this._element.nativeElement);\r\n        this._controller.registerChangeDetector(this._changeDetector);\r\n    }\r\n}\r\n"]}