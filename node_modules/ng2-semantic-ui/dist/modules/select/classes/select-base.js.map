{"version":3,"file":"select-base.js","sourceRoot":"","sources":["../../../../src/modules/select/classes/select-base.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n    ViewChild, HostBinding, ElementRef, HostListener, Input, ContentChildren, QueryList,\r\n    AfterContentInit, TemplateRef, ViewContainerRef, ContentChild, EventEmitter, Output, OnDestroy, Renderer2\r\n} from \"@angular/core\";\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { DropdownService, SuiDropdownMenu } from \"../../dropdown/index\";\r\nimport { SearchService, LookupFn, FilterFn } from \"../../search/index\";\r\nimport { Util, ITemplateRefContext, HandledEvent, KeyCode, IFocusEvent } from \"../../../misc/util/index\";\r\nimport { ISelectLocaleValues, RecursivePartial, SuiLocalizationService } from \"../../../behaviors/localization/index\";\r\nimport { SuiSelectOption } from \"../components/select-option\";\r\nimport { SuiSelectSearch } from \"../directives/select-search\";\r\n\r\nexport interface IOptionContext<T> extends ITemplateRefContext<T> {\r\n    query?:string;\r\n}\r\n\r\n// We use generic type T to specify the type of the options we are working with,\r\n// and U to specify the type of the property of the option used as the value.\r\nexport abstract class SuiSelectBase<T, U> implements AfterContentInit, OnDestroy {\r\n    public dropdownService:DropdownService;\r\n    public searchService:SearchService<T, U>;\r\n\r\n    @ViewChild(SuiDropdownMenu)\r\n    protected _menu:SuiDropdownMenu;\r\n\r\n    // Keep track of all of the rendered select options. (Rendered by the user using *ngFor).\r\n    @ContentChildren(SuiSelectOption, { descendants: true })\r\n    protected _renderedOptions:QueryList<SuiSelectOption<T>>;\r\n\r\n    // Keep track of all of the subscriptions to the selected events on the rendered options.\r\n    private _renderedSubscriptions:Subscription[];\r\n\r\n    // Sets the Semantic UI classes on the host element.\r\n    @HostBinding(\"class.ui\")\r\n    @HostBinding(\"class.dropdown\")\r\n    private _selectClasses:boolean;\r\n\r\n    @HostBinding(\"class.active\")\r\n    public get isActive():boolean {\r\n        return this.dropdownService.isOpen;\r\n    }\r\n\r\n    @HostBinding(\"class.visible\")\r\n    public get isVisible():boolean {\r\n        return this._menu.isVisible;\r\n    }\r\n\r\n    @Input()\r\n    public isSearchable:boolean;\r\n\r\n    public isSearchExternal:boolean;\r\n\r\n    @HostBinding(\"class.search\")\r\n    private get _searchClass():boolean {\r\n        return this.isSearchable && !this.isSearchExternal;\r\n    }\r\n\r\n    @HostBinding(\"class.loading\")\r\n    public get isSearching():boolean {\r\n        return this.searchService.isSearching;\r\n    }\r\n\r\n    @ViewChild(SuiSelectSearch)\r\n    private _internalSearch?:SuiSelectSearch;\r\n\r\n    @ContentChild(SuiSelectSearch)\r\n    private _manualSearch?:SuiSelectSearch;\r\n\r\n    public get searchInput():SuiSelectSearch | undefined {\r\n        return this._manualSearch || this._internalSearch;\r\n    }\r\n\r\n    @Input(\"tabindex\")\r\n    private _tabIndex?:number;\r\n\r\n    @HostBinding(\"attr.tabindex\")\r\n    public get tabIndex():number {\r\n        if (this.isDisabled) {\r\n            // If disabled, remove from tabindex.\r\n            return -1;\r\n        }\r\n        if (this.dropdownService.isOpen && this.isSearchExternal) {\r\n            // If open & in menu search, remove from tabindex (as input always autofocusses).\r\n            return -1;\r\n        }\r\n        if (this._tabIndex != undefined) {\r\n            // If custom tabindex, default to that.\r\n            return this._tabIndex;\r\n        }\r\n        if (this._searchClass) {\r\n            // If search input enabled, tab goes to input.\r\n            return -1;\r\n        }\r\n        // Otherwise, return default of 0.\r\n        return 0;\r\n    }\r\n\r\n    @HostBinding(\"class.disabled\")\r\n    @Input()\r\n    public get isDisabled():boolean {\r\n        return this.dropdownService.isDisabled;\r\n    }\r\n\r\n    public set isDisabled(value:boolean) {\r\n        this.dropdownService.isDisabled = !!value;\r\n    }\r\n\r\n    @Input()\r\n    public set options(options:T[]) {\r\n        if (options) {\r\n            this.searchService.options = options;\r\n\r\n            this.optionsUpdateHook();\r\n        }\r\n    }\r\n\r\n    @Input()\r\n    public set optionsFilter(filter:FilterFn<T> | undefined) {\r\n        if (filter) {\r\n            this.searchService.optionsFilter = filter;\r\n\r\n            this.optionsUpdateHook();\r\n        }\r\n    }\r\n\r\n    @Input()\r\n    public set optionsLookup(lookup:LookupFn<T, U> | undefined) {\r\n        if (lookup) {\r\n            this.searchService.optionsLookup = lookup;\r\n\r\n            this.optionsUpdateHook();\r\n        }\r\n    }\r\n\r\n    public get filteredOptions():T[] {\r\n        return this.searchService.results;\r\n    }\r\n\r\n    // Deprecated\r\n    public get availableOptions():T[] {\r\n        return this.filteredOptions;\r\n    }\r\n\r\n    public get query():string | undefined {\r\n        return this.isSearchable ? this.searchService.query : undefined;\r\n    }\r\n\r\n    public set query(query:string | undefined) {\r\n        if (query != undefined) {\r\n            this.queryUpdateHook();\r\n            this.updateQuery(query);\r\n            // Update the rendered text as query has changed.\r\n            this._renderedOptions.forEach(ro => this.initialiseRenderedOption(ro));\r\n\r\n            if (this.searchInput) {\r\n                this.searchInput.query = query;\r\n            }\r\n        }\r\n    }\r\n\r\n    @Input()\r\n    public get labelField():string | undefined {\r\n        return this.searchService.optionsField;\r\n    }\r\n\r\n    public set labelField(field:string | undefined) {\r\n        this.searchService.optionsField = field;\r\n    }\r\n\r\n    public get labelGetter():(obj:T) => string {\r\n        // Helper function to retrieve the label from an item.\r\n        return (obj:T) => {\r\n            const label = Util.Object.readValue<T, string>(obj, this.labelField);\r\n            if (label != undefined) {\r\n                return label.toString();\r\n            }\r\n            return \"\";\r\n        };\r\n    }\r\n\r\n    @Input()\r\n    public valueField:string;\r\n\r\n    public get valueGetter():(obj:T) => U {\r\n        // Helper function to retrieve the value from an item.\r\n        return (obj:T) => Util.Object.readValue<T, U>(obj, this.valueField);\r\n    }\r\n\r\n    @Input()\r\n    public optionTemplate:TemplateRef<IOptionContext<T>>;\r\n\r\n    private _optionFormatter?:(o:T, q?:string) => string;\r\n\r\n    public get configuredFormatter():(option:T) => string {\r\n        if (this._optionFormatter) {\r\n            return o => this._optionFormatter!(o, this.isSearchable ? this.query : undefined);\r\n        } else if (this.searchService.optionsLookup) {\r\n            return o => this.labelGetter(o);\r\n        } else {\r\n            return o => this.searchService.highlightMatches(this.labelGetter(o), this.query || \"\");\r\n        }\r\n    }\r\n\r\n    @Input()\r\n    public set optionFormatter(formatter:((option:T, query?:string) => string) | undefined) {\r\n        this._optionFormatter = formatter;\r\n    }\r\n\r\n    private _localeValues:ISelectLocaleValues;\r\n    public localeOverrides:RecursivePartial<ISelectLocaleValues>;\r\n\r\n    public get localeValues():ISelectLocaleValues {\r\n        return this._localizationService.override<\"select\">(this._localeValues, this.localeOverrides);\r\n    }\r\n\r\n    @Input()\r\n    public icon:string;\r\n\r\n    @Input()\r\n    public transition:string;\r\n\r\n    @Input()\r\n    public transitionDuration:number;\r\n\r\n    @Output(\"touched\")\r\n    public onTouched:EventEmitter<void>;\r\n\r\n    private _documentKeyDownListener:() => void;\r\n\r\n    constructor(private _element:ElementRef, renderer:Renderer2, protected _localizationService:SuiLocalizationService) {\r\n        this.dropdownService = new DropdownService();\r\n        // We do want an empty query to return all results.\r\n        this.searchService = new SearchService<T, U>(true);\r\n\r\n        this.isSearchable = false;\r\n\r\n        this.onLocaleUpdate();\r\n        this._localizationService.onLanguageUpdate.subscribe(() => this.onLocaleUpdate());\r\n        this._renderedSubscriptions = [];\r\n\r\n        this.icon = \"dropdown\";\r\n        this.transition = \"slide down\";\r\n        this.transitionDuration = 200;\r\n\r\n        this.onTouched = new EventEmitter<void>();\r\n        this._documentKeyDownListener = renderer.listen(\"document\", \"keydown\", (e:KeyboardEvent) => this.onDocumentKeyDown(e));\r\n\r\n        this._selectClasses = true;\r\n    }\r\n\r\n    public ngAfterContentInit():void {\r\n        this._menu.service = this.dropdownService;\r\n        // We manually specify the menu items to the menu because the @ContentChildren doesn't pick up our dynamically rendered items.\r\n        this._menu.items = this._renderedOptions;\r\n\r\n        if (this._manualSearch) {\r\n            this.isSearchable = true;\r\n            this.isSearchExternal = true;\r\n        }\r\n\r\n        if (this.searchInput) {\r\n            this.searchInput.onQueryUpdated.subscribe((q:string) => this.query = q);\r\n            this.searchInput.onQueryKeyDown.subscribe((e:KeyboardEvent) => this.onQueryInputKeydown(e));\r\n        }\r\n\r\n        // We must call this immediately as changes doesn't fire when you subscribe.\r\n        this.onAvailableOptionsRendered();\r\n        this._renderedOptions.changes.subscribe(() => this.onAvailableOptionsRendered());\r\n    }\r\n\r\n    private onLocaleUpdate():void {\r\n        this._localeValues = this._localizationService.get().select;\r\n    }\r\n\r\n    // Hook is here since Typescript doesn't yet support overriding getters & setters while still calling the superclass.\r\n    protected optionsUpdateHook():void {}\r\n\r\n    // Hook is here since Typescript doesn't yet support overriding getters & setters while still calling the superclass.\r\n    protected queryUpdateHook():void {}\r\n\r\n    protected updateQuery(query:string):void {\r\n        // Update the query then open the dropdown, as after keyboard input it should always be open.\r\n        this.searchService.updateQuery(query, () =>\r\n            this.dropdownService.setOpenState(true));\r\n    }\r\n\r\n    protected resetQuery(delayed:boolean = true):void {\r\n        // The search delay is set to the transition duration to ensure results\r\n        // aren't rendered as the select closes as that causes a sudden flash.\r\n        if (delayed) {\r\n            this.searchService.searchDelay = this._menu.menuTransitionDuration;\r\n            this.searchService.updateQueryDelayed(\"\");\r\n        } else {\r\n            this.searchService.updateQuery(\"\");\r\n        }\r\n\r\n        if (this.searchInput) {\r\n            this.searchInput.query = \"\";\r\n        }\r\n    }\r\n\r\n    protected onAvailableOptionsRendered():void {\r\n        // Unsubscribe from all previous subscriptions to avoid memory leaks on large selects.\r\n        this._renderedSubscriptions.forEach(rs => rs.unsubscribe());\r\n        this._renderedSubscriptions = [];\r\n\r\n        this._renderedOptions.forEach(ro => {\r\n            // Slightly delay initialisation to avoid change after checked errors. TODO - look into avoiding this!\r\n            setTimeout(() => this.initialiseRenderedOption(ro));\r\n\r\n            this._renderedSubscriptions.push(ro.onSelected.subscribe(() => this.selectOption(ro.value)));\r\n        });\r\n\r\n        // If no options have been provided, autogenerate them from the rendered ones.\r\n        if (this.searchService.options.length === 0 && !this.searchService.optionsLookup) {\r\n            this.options = this._renderedOptions.map(ro => ro.value);\r\n        }\r\n    }\r\n\r\n    protected initialiseRenderedOption(option:SuiSelectOption<T>):void {\r\n        option.usesTemplate = !!this.optionTemplate;\r\n        option.formatter = this.configuredFormatter;\r\n\r\n        if (option.usesTemplate) {\r\n            this.drawTemplate(option.templateSibling, option.value);\r\n        }\r\n\r\n        option.changeDetector.markForCheck();\r\n    }\r\n\r\n    public abstract selectOption(option:T):void;\r\n\r\n    protected findOption(options:T[], value:U):T | undefined {\r\n        // Tries to find an option in options array\r\n        return options.find(o => value === this.valueGetter(o));\r\n    }\r\n\r\n    public onCaretClick(e:HandledEvent):void {\r\n        if (!e.eventHandled) {\r\n            e.eventHandled = true;\r\n\r\n            if (!this.dropdownService.isAnimating) {\r\n                this.dropdownService.setOpenState(!this.dropdownService.isOpen);\r\n\r\n                this.focus();\r\n            }\r\n        }\r\n    }\r\n\r\n    @HostListener(\"click\", [\"$event\"])\r\n    public onClick(e:HandledEvent):void {\r\n        if (!e.eventHandled && !this.dropdownService.isAnimating) {\r\n            e.eventHandled = true;\r\n\r\n            // If the dropdown is searchable, clicking should keep it open, otherwise we toggle the open state.\r\n            this.dropdownService.setOpenState(this.isSearchable ? true : !this.dropdownService.isOpen);\r\n\r\n            // Immediately focus the search input whenever clicking on the select.\r\n            this.focus();\r\n        }\r\n    }\r\n\r\n    @HostListener(\"focusin\")\r\n    private onFocusIn():void {\r\n        if (!this.dropdownService.isOpen && !this.dropdownService.isAnimating) {\r\n            this.dropdownService.setOpenState(true);\r\n\r\n            this.focus();\r\n        }\r\n    }\r\n\r\n    @HostListener(\"focusout\", [\"$event\"])\r\n    private onFocusOut(e:IFocusEvent):void {\r\n        if (!this._element.nativeElement.contains(e.relatedTarget)) {\r\n            this.dropdownService.setOpenState(false);\r\n            this.onTouched.emit();\r\n        }\r\n    }\r\n\r\n    @HostListener(\"keypress\", [\"$event\"])\r\n    public onKeyPress(e:KeyboardEvent):void {\r\n        if (e.keyCode === KeyCode.Enter) {\r\n            // Enables support for focussing and opening with the keyboard alone.\r\n            // Using directly because Renderer2 doesn't have invokeElementMethod method anymore.\r\n            this._element.nativeElement.click();\r\n        }\r\n    }\r\n\r\n    public onDocumentKeyDown(e:KeyboardEvent):void {\r\n        if (this._element.nativeElement.contains(e.target) &&\r\n            !this.dropdownService.isOpen &&\r\n            e.keyCode === KeyCode.Down) {\r\n\r\n            // Enables support for focussing and opening with the keyboard alone.\r\n            // Using directly because Renderer2 doesn't have invokeElementMethod method anymore.\r\n            this._element.nativeElement.click();\r\n\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    public onQueryInputKeydown(event:KeyboardEvent):void {}\r\n\r\n    protected focus():void {\r\n        if (this.isSearchable && this.searchInput) {\r\n            // Focusses the search input only when searchable.\r\n            // Using directly because Renderer2 doesn't have invokeElementMethod method anymore.\r\n            this.searchInput.focus();\r\n        } else {\r\n            this._element.nativeElement.focus();\r\n        }\r\n    }\r\n\r\n    // Helper that draws the provided template beside the provided ViewContainerRef.\r\n    protected drawTemplate(siblingRef:ViewContainerRef, value:T):void {\r\n        siblingRef.clear();\r\n        // Use of `$implicit` means use of <ng-template let-option> syntax is supported.\r\n        siblingRef.createEmbeddedView(this.optionTemplate, {\r\n            $implicit: value,\r\n            query: this.query\r\n        });\r\n    }\r\n\r\n    public ngOnDestroy():void {\r\n        this._renderedSubscriptions.forEach(s => s.unsubscribe());\r\n        this._documentKeyDownListener();\r\n    }\r\n}\r\n"]}