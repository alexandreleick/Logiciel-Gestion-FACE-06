{"version":3,"file":"pagination.js","sourceRoot":"","sources":["../../../../src/collections/pagination/components/pagination.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, Output, OnChanges, EventEmitter, HostBinding } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"sui-pagination\",\r\n    template: `\r\n<a *ngIf=\"hasBoundaryLinks\" class=\"item\"  (click)=\"setPage(1)\" [class.disabled]=\"page===1\">\r\n    <span><i class=\"angle double left icon\"></i></span>\r\n</a>\r\n<a *ngIf=\"hasNavigationLinks\" class=\"item\" (click)=\"setPage(page-1)\" [class.disabled]=\"!hasPrevious()\">\r\n    <span><i class=\"angle left icon\"></i></span>\r\n</a>\r\n<ng-container *ngIf=\"hasEllipses\">\r\n    <a class=\"item\" (click)=\"setPage(1)\" *ngIf=\"pages[0] !== 1\">\r\n        <span>1</span>\r\n    </a>\r\n    <a class=\"disabled item\" *ngIf=\"pages[0] > 2\">...</a>\r\n</ng-container>\r\n<a *ngFor=\"let p of pages\" class=\"item\" [class.active]=\"p===page\" (click)=\"setPage(p)\">\r\n    {{ p }}\r\n</a>\r\n<ng-container *ngIf=\"hasEllipses\">\r\n    <a class=\"disabled item\" *ngIf=\"pages[pages.length - 1] < pageCount - 1\">...</a>\r\n    <a class=\"item\" (click)=\"setPage(pageCount)\" *ngIf=\"pages[pages.length - 1] !== pageCount\">\r\n        <span>{{ pageCount }}</span>\r\n    </a>\r\n</ng-container>\r\n<a *ngIf=\"hasNavigationLinks\" class=\"item\" (click)=\"setPage(page+1)\" [class.disabled]=\"!hasNext()\">\r\n    <span><i class=\"angle right icon\"></i></span>\r\n</a>\r\n<a *ngIf=\"hasBoundaryLinks\" class=\"item\"  (click)=\"setPage(pageCount)\" [class.disabled]=\"page===pageCount\">\r\n    <span><i class=\"angle double right icon\"></i></span>\r\n</a>\r\n`,\r\n    styles: [`\r\n:host .item {\r\n    transition: none;\r\n}\r\n`]\r\n})\r\nexport class SuiPagination implements OnChanges {\r\n\r\n    @HostBinding(\"class.ui\")\r\n    @HostBinding(\"class.pagination\")\r\n    @HostBinding(\"class.menu\")\r\n    private _paginationClasses:boolean;\r\n\r\n    // Public members\r\n    public pageCount:number;\r\n\r\n    @Output()\r\n    public pageChange:EventEmitter<number>;\r\n\r\n    // Private members\r\n    private _maxSize?:number;\r\n    private _collectionSize:number;\r\n    private _page:number;\r\n    private _pages:number[];\r\n    private _hasNavigationLinks:boolean;\r\n\r\n    @Input()\r\n    public get maxSize():number|undefined {\r\n        return this._maxSize;\r\n    }\r\n\r\n    public set maxSize(value:number | undefined) {\r\n        this._maxSize = (value != undefined) ? Math.max(value, 1) : undefined;\r\n    }\r\n\r\n    @Input()\r\n    public get collectionSize():number {\r\n        return this._collectionSize;\r\n    }\r\n\r\n    public set collectionSize(value:number) {\r\n        this._collectionSize = Math.max(value, 0);\r\n    }\r\n\r\n    @Input()\r\n    public pageSize:number;\r\n\r\n    @Input()\r\n    public get hasNavigationLinks():boolean {\r\n        const maxSize = this._maxSize || this.pageCount;\r\n        return this._hasNavigationLinks || maxSize < this.pageCount;\r\n    }\r\n\r\n    public set hasNavigationLinks(value:boolean) {\r\n        this._hasNavigationLinks = value;\r\n    }\r\n\r\n    @Input()\r\n    public hasBoundaryLinks:boolean;\r\n\r\n    @Input()\r\n    public canRotate:boolean;\r\n\r\n    @Input()\r\n    public hasEllipses:boolean;\r\n\r\n    @Input()\r\n    public get page():number {\r\n        return this._page;\r\n    }\r\n\r\n    public set page(value:number) {\r\n        this.setPage(value);\r\n    }\r\n\r\n    public get pages():number[] {\r\n        return this._pages;\r\n    }\r\n\r\n    constructor() {\r\n        this._paginationClasses = true;\r\n        this.pageChange = new EventEmitter<number>();\r\n\r\n        this.pageSize = 10;\r\n        this._page = 1;\r\n        this._pages = [];\r\n        this.pageCount = 1;\r\n        this.hasNavigationLinks = true;\r\n        this.hasBoundaryLinks = false;\r\n        this.canRotate = false;\r\n        this.hasEllipses = true;\r\n    }\r\n\r\n    // Public methods\r\n    public hasPrevious():boolean {\r\n        return this.page > 1;\r\n    }\r\n\r\n    public hasNext():boolean {\r\n        return this.page < this.pageCount;\r\n    }\r\n\r\n    public setPage(newPage:number):void {\r\n        const value:number = (Number.isInteger(newPage)) ? Math.min(Math.max(newPage, 1), this.pageCount) : 1;\r\n        if (value !== this._page) {\r\n            this._page = value;\r\n            this.pageChange.emit(this._page);\r\n        }\r\n    }\r\n\r\n    // Lifecycle hooks\r\n    public ngOnChanges():void {\r\n        this.updatePages();\r\n    }\r\n\r\n    // Private methods\r\n    private updatePages():void {\r\n        this.pageCount = Math.max(1, Math.ceil(this._collectionSize / this.pageSize));\r\n\r\n        const [start, end] = this.applyPagination();\r\n\r\n        this._pages = Array<number>(end - start)\r\n            .fill(start + 1)\r\n            .map((s, i) => s + i);\r\n    }\r\n\r\n    private applyPagination():[number, number] {\r\n        const maxSize = (this.maxSize != undefined) ? Math.min(this.maxSize, this.pageCount) : this.pageCount;\r\n\r\n        const page = Math.ceil(this.page / maxSize) - 1;\r\n        let start = 0;\r\n        let end = this.pageCount;\r\n\r\n        if (this.canRotate) {\r\n            const leftOffset = Math.floor(maxSize / 2);\r\n            const rightOffset = maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\r\n\r\n            if (this.page <= leftOffset) {\r\n                end = maxSize;\r\n            } else if (this.pageCount - this.page < leftOffset) {\r\n                start = this.pageCount - maxSize;\r\n            } else {\r\n                start = this.page - leftOffset - 1;\r\n                end = this.page + rightOffset;\r\n            }\r\n        } else {\r\n            start = page * maxSize;\r\n            end = start + maxSize;\r\n        }\r\n\r\n        return [start, Math.min(end, this.pageCount)];\r\n    }\r\n}\r\n"]}